services:
  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    restart: always
    ports:
      - "5678:5678"
    environment:
      - N8N_HOST=${N8N_HOST:-localhost}
      - N8N_PORT=5678
      - N8N_PROTOCOL=${N8N_PROTOCOL:-http}
      - NODE_ENV=production
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY:-your-secret-key}
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      - WEBHOOK_URL=${N8N_PROTOCOL:-http}://${N8N_HOST:-localhost}:5678/
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD=${DB_POSTGRESDB_PASSWORD:-n8n}
      - TZ=${GENERIC_TIMEZONE:-UTC}
    volumes:
      - ./n8n_data:/home/node/.n8n
    # depends_on:
    #   - postgres
    #   - qdrant
    networks:
      - ai-network

  postgres:
    image: postgres:14
    container_name: n8n-postgres
    restart: always
    environment:
      - POSTGRES_DB=n8n
      - POSTGRES_USER=n8n
      - POSTGRES_PASSWORD=${DB_POSTGRESDB_PASSWORD:-n8n}
      - TZ=${GENERIC_TIMEZONE:-UTC}
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    networks:
      - ai-network
      
  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant
    restart: always
    environment:
      - TZ=${GENERIC_TIMEZONE:-UTC}
    volumes:
      - ./qdrant_data:/qdrant/storage
    ports:
      - "6333:6333"
    networks:
      - ai-network
      
# volumes:
#   n8n_data:
#   postgres_data:
#   qdrant_data:

networks:
  ai-network:
    driver: bridge
