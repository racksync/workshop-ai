{
  "createdAt": "2025-03-29T15:09:41.073Z",
  "updatedAt": "2025-04-07T13:55:16.847Z",
  "id": "f06rukJY77qFnTJj",
  "name": "14 - OpenAI + Qdrant (Movie RAG)",
  "active": false,
  "nodes": [
    {
      "parameters": {},
      "id": "dbbdf848-7adc-4601-9619-1ac703032ad7",
      "name": "When clicking ‘Test workflow’",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        -200,
        40
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "mode": "name",
          "value": "mrscoopers"
        },
        "repository": {
          "__rl": true,
          "mode": "list",
          "value": "n8n_demo",
          "cachedResultUrl": "https://github.com/mrscoopers/n8n_demo",
          "cachedResultName": "n8n_demo"
        },
        "filePath": "Top_1000_IMDB_movies.csv",
        "additionalParameters": {}
      },
      "id": "b2bf9f42-07e2-4822-8c63-c66fb236cb29",
      "name": "GitHub",
      "type": "n8n-nodes-base.github",
      "position": [
        20,
        40
      ],
      "typeVersion": 1,
      "credentials": {
        "githubApi": {
          "id": "W40im5OMgW7ORyOu",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "c27bc76f-4da1-43fd-8d8a-b51c38448e64",
      "name": "Extract from File",
      "type": "n8n-nodes-base.extractFromFile",
      "position": [
        240,
        40
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "442c4475-5149-4c12-aa43-ab6ddc73568a",
      "name": "Embeddings OpenAI",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "position": [
        460,
        260
      ],
      "typeVersion": 1,
      "credentials": {
        "openAiApi": {
          "id": "cjkMLjxOGWyoEfIG",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsonMode": "expressionData",
        "jsonData": "={{ $('Extract from File').item.json.Description }}",
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "movie_name",
                "value": "={{ $('Extract from File').item.json['Movie Name'] }}"
              },
              {
                "name": "movie_release_date",
                "value": "={{ $('Extract from File').item.json['Year of Release'] }}"
              },
              {
                "name": "movie_description",
                "value": "={{ $('Extract from File').item.json.Description }}"
              }
            ]
          }
        }
      },
      "id": "e8a15c7f-583c-4d62-aa1d-3f8fbfece58a",
      "name": "Default Data Loader",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "position": [
        580,
        260
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "5e7eb594-c94d-4aef-9900-db687e707df7",
      "name": "Token Splitter",
      "type": "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter",
      "position": [
        660,
        460
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "mode": "insert",
        "qdrantCollection": {
          "__rl": true,
          "mode": "id",
          "value": "imdb"
        },
        "options": {}
      },
      "id": "a8b19f5e-4ba5-4758-9589-28cd4f2c7657",
      "name": "Qdrant Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "position": [
        480,
        40
      ],
      "typeVersion": 1,
      "credentials": {
        "qdrantApi": {
          "id": "F9LUpVIDvb95KvBg",
          "name": "Qdrant API"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "ad04a2d9-dbe1-4073-bb2f-1708987cf750",
      "name": "When chat message received",
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "position": [
        -1040,
        180
      ],
      "webhookId": "71bfe0f8-227e-466b-9d07-69fd9fe4a27b",
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "model": "gpt-4",
        "options": {}
      },
      "id": "92a60d2b-cf5b-47cb-96f3-d2e66cc0f930",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        -840,
        420
      ],
      "typeVersion": 1,
      "credentials": {
        "openAiApi": {
          "id": "cjkMLjxOGWyoEfIG",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "name": "movie_recommender",
        "description": "Call this tool to get a list of recommended movies from a vector database. ",
        "workflowId": {
          "__rl": true,
          "mode": "id",
          "value": "a58HZKwcOy7lmz56"
        },
        "specifyInputSchema": true,
        "schemaType": "manual",
        "inputSchema": "{\n\"type\": \"object\",\n\"properties\": {\n\t\"positive_example\": {\n      \"type\": \"string\",\n      \"description\": \"A string with a movie description matching the user's positive recommendation request\"\n    },\n    \"negative_example\": {\n      \"type\": \"string\",\n      \"description\": \"A string with a movie description matching the user's negative anti-recommendation reuqest\"\n    }\n}\n}"
      },
      "id": "de52100e-2f05-444e-8df8-60787843af10",
      "name": "Call n8n Workflow Tool",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "position": [
        -540,
        440
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {},
      "id": "f31b8506-b4d7-4b5b-8ea2-260de30c06db",
      "name": "Window Buffer Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "position": [
        -700,
        400
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {},
      "id": "696c4593-e392-492b-8f72-d27ee9440523",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "position": [
        -1140,
        860
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "id": "41267f75-abcb-4d5a-a20c-795a3abe6e11",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "position": [
        -400,
        860
      ],
      "typeVersion": 3
    },
    {
      "parameters": {
        "fieldToSplitOut": "result",
        "options": {}
      },
      "id": "eb2cfd98-86ed-4a7c-9f06-85a816011d43",
      "name": "Split Out",
      "type": "n8n-nodes-base.splitOut",
      "position": [
        260,
        960
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "fieldToSplitOut": "result.points",
        "options": {}
      },
      "id": "351d951f-e56b-488b-a9d1-ee8ea2ff99bb",
      "name": "Split Out1",
      "type": "n8n-nodes-base.splitOut",
      "position": [
        260,
        760
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "mode": "combine",
        "fieldsToMatchString": "id",
        "options": {}
      },
      "id": "8ce55636-6e61-4582-a92e-089e0252bbb4",
      "name": "Merge1",
      "type": "n8n-nodes-base.merge",
      "position": [
        480,
        860
      ],
      "typeVersion": 3
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "destinationFieldName": "response",
        "options": {}
      },
      "id": "4cec359b-a870-4091-988c-4cae50f08e20",
      "name": "Aggregate",
      "type": "n8n-nodes-base.aggregate",
      "position": [
        920,
        860
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "You are a Movie Recommender Tool using a Vector Database under the hood. Provide top-3 movie recommendations returned by the database, ordered by their recommendation score, but not showing the score to the user."
        }
      },
      "id": "91d4e44b-fad1-4021-be92-c7456b0267e3",
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        -780,
        180
      ],
      "typeVersion": 1.6
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/embeddings",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "openAiApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer $OPENAI_API_KEY"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "input",
              "value": "={{ $json.query.positive_example }}"
            },
            {
              "name": "model",
              "value": "text-embedding-3-small"
            }
          ]
        },
        "options": {}
      },
      "id": "65bf0507-0262-4641-ac5a-362a5a6f103c",
      "name": "Embedding Recommendation Request with Open AI",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -840,
        760
      ],
      "typeVersion": 4.2,
      "credentials": {
        "openAiApi": {
          "id": "cjkMLjxOGWyoEfIG",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/embeddings",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "openAiApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer $OPENAI_API_KEY"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "input",
              "value": "={{ $json.query.negative_example }}"
            },
            {
              "name": "model",
              "value": "text-embedding-3-small"
            }
          ]
        },
        "options": {}
      },
      "id": "d024b1f6-3f3b-4aaf-94ce-2eed0d28ec57",
      "name": "Embedding Anti-Recommendation Request with Open AI",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -840,
        960
      ],
      "typeVersion": 4.2,
      "credentials": {
        "openAiApi": {
          "id": "cjkMLjxOGWyoEfIG",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "01a28c9d-aeb1-48bb-8a73-f8bddbd73460",
              "name": "positive_example",
              "type": "array",
              "value": "={{ $json.data[0].embedding }}"
            }
          ]
        },
        "options": {}
      },
      "id": "d405ab0d-4a71-40a6-b14a-b1d95b616737",
      "name": "Extracting Embedding",
      "type": "n8n-nodes-base.set",
      "position": [
        -620,
        760
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "01a28c9d-aeb1-48bb-8a73-f8bddbd73460",
              "name": "negative_example",
              "type": "array",
              "value": "={{ $json.data[0].embedding }}"
            }
          ]
        },
        "options": {}
      },
      "id": "10385ce1-d95f-4cae-b336-a2a32a9124c0",
      "name": "Extracting Embedding1",
      "type": "n8n-nodes-base.set",
      "position": [
        -620,
        960
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://qdrant:6333/collections/imdb_1000_open_ai/points/query",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "qdrantApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"query\": {\n    \"recommend\": {\n      \"positive\": [[{{ $json.positive_example }}]],\n      \"negative\": [[{{ $json.negative_example }}]],\n      \"strategy\": \"average_vector\"\n    }\n  },\n  \"limit\":3\n}",
        "options": {}
      },
      "id": "2f453521-4593-461e-9378-f5b38ad1a4de",
      "name": "Calling Qdrant Recommendation API",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -180,
        860
      ],
      "typeVersion": 4.2,
      "credentials": {
        "qdrantApi": {
          "id": "F9LUpVIDvb95KvBg",
          "name": "Qdrant API"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://qdrant:6333/collections/imdb_1000_open_ai/points",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "qdrantApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"ids\": [\"{{ $json.result.points[0].id }}\", \"{{ $json.result.points[1].id }}\", \"{{ $json.result.points[2].id }}\"],\n    \"with_payload\":true\n}",
        "options": {}
      },
      "id": "6fd1d4ab-8da9-4ec4-bff7-ad954d845f7e",
      "name": "Retrieving Recommended Movies Meta Data",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        40,
        960
      ],
      "typeVersion": 4.2,
      "credentials": {
        "qdrantApi": {
          "id": "F9LUpVIDvb95KvBg",
          "name": "Qdrant API"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b4b520a5-d0e2-4dcb-af9d-0b7748fd44d6",
              "name": "movie_recommendation_score",
              "type": "number",
              "value": "={{ $json.score }}"
            },
            {
              "id": "c9f0982e-bd4e-484b-9eab-7e69e333f706",
              "name": "movie_description",
              "type": "string",
              "value": "={{ $json.payload.content }}"
            },
            {
              "id": "7c7baf11-89cd-4695-9f37-13eca7e01163",
              "name": "movie_name",
              "type": "string",
              "value": "={{ $json.payload.metadata.movie_name }}"
            },
            {
              "id": "1d1d269e-43c7-47b0-859b-268adf2dbc21",
              "name": "movie_release_year",
              "type": "string",
              "value": "={{ $json.payload.metadata.release_year }}"
            }
          ]
        },
        "options": {}
      },
      "id": "abe2162c-5ce5-4f8b-acb7-e09ef06b1a8a",
      "name": "Selecting Fields Relevant for Agent",
      "type": "n8n-nodes-base.set",
      "position": [
        700,
        860
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "content": "Tool, calling Qdrant's recommendation API based on user's request, transformed by AI agent"
      },
      "id": "e63c831b-86e9-42f1-aa3a-020ee9fa454a",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1220,
        640
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "Uploading data (movies and their descriptions) to Qdrant Vector Store\n"
      },
      "id": "cc262141-c6bd-4ed0-ab6b-eced35edc6a0",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -460,
        -140
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "model": "bge-m3:latest"
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOllama",
      "typeVersion": 1,
      "position": [
        260,
        260
      ],
      "id": "1d7329bb-92a2-42d1-991e-756a91f5c897",
      "name": "Embeddings Ollama",
      "credentials": {
        "ollamaApi": {
          "id": "0PYwHyuTIKj4lRIL",
          "name": "Ollama account"
        }
      },
      "disabled": true
    }
  ],
  "connections": {
    "Merge": {
      "main": [
        [
          {
            "node": "Calling Qdrant Recommendation API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Selecting Fields Relevant for Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Split Out1": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Token Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Qdrant Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "Qdrant Vector Store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Qdrant Vector Store",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Extracting Embedding": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Window Buffer Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Extracting Embedding1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Call n8n Workflow Tool": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "Embedding Recommendation Request with Open AI",
            "type": "main",
            "index": 0
          },
          {
            "node": "Embedding Anti-Recommendation Request with Open AI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Calling Qdrant Recommendation API": {
      "main": [
        [
          {
            "node": "Retrieving Recommended Movies Meta Data",
            "type": "main",
            "index": 0
          },
          {
            "node": "Split Out1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "GitHub",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Selecting Fields Relevant for Agent": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retrieving Recommended Movies Meta Data": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embedding Recommendation Request with Open AI": {
      "main": [
        [
          {
            "node": "Extracting Embedding",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embedding Anti-Recommendation Request with Open AI": {
      "main": [
        [
          {
            "node": "Extracting Embedding1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings Ollama": {
      "ai_embedding": [
        []
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {
    "Execute Workflow Trigger": [
      {
        "json": {
          "query": {
            "negative_example": "horror bloody movie",
            "positive_example": "romantic comedy"
          }
        }
      }
    ]
  },
  "versionId": "3eed49e8-792d-4207-9382-cda4270dee2e",
  "triggerCount": 0,
  "tags": []
}